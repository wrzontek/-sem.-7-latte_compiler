entrypoints Program;

Prog. Program ::= [CodeBlock] ;

Block.        CodeBlock ::= Ident ":" [NonJmpStmt] JmpStmt;

StmtBinOp.      NonJmpStmt ::= Ident ":=" Atom BinOp Atom ;
StmtNoOp.       NonJmpStmt ::= Ident ":=" Atom ;
StmtCall.    NonJmpStmt ::= Ident ":=" "_call" Ident [ Atom ] ;
StmtInc.        NonJmpStmt ::= Ident "++" ;
StmtDecr.       NonJmpStmt ::= Ident "--" ;

StmtGoto.           JmpStmt ::= "goto" Ident ; -- todo trzeba uważać na zmienne nazwana goto itp
StmtGoNext.         JmpStmt ::= "_go_next;
StmtCondJmp.        JmpStmt ::= "if" Atom "then" "goto" Ident "else" "goto" Ident;
StmtRet.            JmpStmt ::= "return" Atom ;
StmtVRet.           JmpStmt ::= "return" ; -- todo konflikt? chyba niegroźny shift/reduce

AtomVar.   Atom ::= Ident ; -- variable or string constant
AtomInt.   Atom ::= Integer ;
AtomStr.   Atom ::= String ;

AddOp.      BinOp ::= "+" ;
SubOp.      BinOp ::= "-" ;
MulOp.      BinOp ::= "*" ;
DivOp.      BinOp ::= "/" ;
ModOp.      BinOp ::= "%" ;
AndOp.      BinOp ::= "&&" ;
OrOp.       BinOp ::= "||" ;

LTH.       BinOp ::= "<" ;
LE.        BinOp ::= "<=" ;
GTH.       BinOp ::= ">" ;
GE.        BinOp ::= ">=" ;
EQU.       BinOp ::= "==" ;
NE.        BinOp ::= "!=" ;

separator CodeBlock "" ;
separator NonJmpStmt "" ;
separator Atom "" ;

comment ";" ;