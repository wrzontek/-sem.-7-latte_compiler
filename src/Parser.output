Nonterminals useless in grammar

    ListType


Terminals unused in grammar

    _ERROR_


Rules useless in grammar

   98 ListType: %empty
   99         | Type
  100         | Type _COMMA ListType


State 81 conflicts: 1 shift/reduce
State 82 conflicts: 1 shift/reduce
State 93 conflicts: 1 shift/reduce
State 161 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: ListTopDef

    2 TopDef: Type _IDENT_ _LPAREN ListArg _RPAREN Block
    3       | _KW_class _IDENT_ _LBRACE ListClassMember _RBRACE
    4       | _KW_class _IDENT_ _KW_extends _IDENT_ _LBRACE ListClassMember _RBRACE

    5 ListClassMember: %empty
    6                | ListClassMember ClassMember

    7 ListTopDef: TopDef
    8           | TopDef ListTopDef

    9 Arg: Type _IDENT_

   10 ListArg: %empty
   11        | Arg
   12        | Arg _COMMA ListArg

   13 ClassMember: Type ListItem _SEMI
   14            | Type _IDENT_ _LPAREN ListArg _RPAREN Block

   15 Block: _LBRACE ListStmt _RBRACE

   16 ListStmt: %empty
   17         | ListStmt Stmt

   18 Stmt: _SEMI
   19     | Block
   20     | Type ListItem _SEMI
   21     | Expr _EQ Expr _SEMI
   22     | Expr _DPLUS _SEMI
   23     | Expr _DMINUS _SEMI
   24     | _KW_return Expr _SEMI
   25     | _KW_return _SEMI
   26     | _KW_if _LPAREN Expr _RPAREN Stmt
   27     | _KW_if _LPAREN Expr _RPAREN Stmt _KW_else Stmt
   28     | _KW_while _LPAREN Expr _RPAREN Stmt
   29     | _KW_for _LPAREN Type _IDENT_ _COLON _IDENT_ _RPAREN Stmt
   30     | Expr _SEMI

   31 Item: _IDENT_
   32     | _IDENT_ _EQ Expr

   33 ListItem: Item
   34         | Item _COMMA ListItem

   35 ComplexStart: _LPAREN ComplexStart _RPAREN
   36             | _IDENT_ _DOT _IDENT_
   37             | _IDENT_ ListDimDef
   38             | _IDENT_ _LPAREN ListExpr _RPAREN
   39             | _KW_new ArrType

   40 ComplexPart: _IDENT_
   41            | ListDimDef
   42            | _LPAREN ListExpr _RPAREN
   43            | _DOT

   44 ArrType: _KW_int
   45        | _KW_string
   46        | _KW_boolean
   47        | _IDENT_

   48 Type: _KW_int
   49     | _KW_string
   50     | _KW_boolean
   51     | _KW_void
   52     | ArrType ListArrDimType
   53     | _IDENT_

   54 ArrDimType: _EMPTYBRACK

   55 ListArrDimType: ArrDimType
   56               | ArrDimType ListArrDimType

   57 DimDef: _LBRACK Expr _RBRACK

   58 ListDimDef: DimDef
   59           | DimDef ListDimDef

   60 Expr6: _IDENT_
   61      | _LPAREN _IDENT_ _RPAREN
   62      | ComplexStart ListComplexPart
   63      | _LPAREN _IDENT_ _RPAREN _KW_null
   64      | _INTEGER_
   65      | _KW_true
   66      | _KW_false
   67      | _STRING_
   68      | _LPAREN Expr _RPAREN

   69 ListComplexPart: %empty
   70                | ListComplexPart ComplexPart

   71 Expr5: _MINUS Expr6
   72      | _BANG Expr6
   73      | Expr6

   74 Expr4: Expr4 MulOp Expr5
   75      | Expr5

   76 Expr3: Expr3 AddOp Expr4
   77      | Expr4

   78 Expr2: Expr2 RelOp Expr3
   79      | Expr3

   80 Expr1: Expr2 _DAMP Expr1
   81      | Expr2

   82 Expr: Expr1 _DBAR Expr
   83     | Expr1

   84 ListExpr: %empty
   85         | Expr
   86         | Expr _COMMA ListExpr

   87 AddOp: _PLUS
   88      | _MINUS

   89 MulOp: _STAR
   90      | _SLASH
   91      | _PERCENT

   92 RelOp: _LT
   93      | _LDARROW
   94      | _GT
   95      | _GTEQ
   96      | _DEQ
   97      | _BANGEQ


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _ERROR_ (258)
    _BANG (259) 72
    _BANGEQ (260) 97
    _PERCENT (261) 91
    _DAMP (262) 80
    _LPAREN (263) 2 14 26 27 28 29 35 38 42 61 63 68
    _RPAREN (264) 2 14 26 27 28 29 35 38 42 61 63 68
    _STAR (265) 89
    _PLUS (266) 87
    _DPLUS (267) 22
    _COMMA (268) 12 34 86
    _MINUS (269) 71 88
    _DMINUS (270) 23
    _DOT (271) 36 43
    _SLASH (272) 90
    _COLON (273) 29
    _SEMI (274) 13 18 20 21 22 23 24 25 30
    _LT (275) 92
    _LDARROW (276) 93
    _EQ (277) 21 32
    _DEQ (278) 96
    _GT (279) 94
    _GTEQ (280) 95
    _LBRACK (281) 57
    _EMPTYBRACK (282) 54
    _RBRACK (283) 57
    _KW_boolean (284) 46 50
    _KW_class (285) 3 4
    _KW_else (286) 27
    _KW_extends (287) 4
    _KW_false (288) 66
    _KW_for (289) 29
    _KW_if (290) 26 27
    _KW_int (291) 44 48
    _KW_new (292) 39
    _KW_null (293) 63
    _KW_return (294) 24 25
    _KW_string (295) 45 49
    _KW_true (296) 65
    _KW_void (297) 51
    _KW_while (298) 28
    _LBRACE (299) 3 4 15
    _DBAR (300) 82
    _RBRACE (301) 3 4 15
    _STRING_ <_string> (302) 67
    _INTEGER_ <_int> (303) 64
    _IDENT_ <_string> (304) 2 3 4 9 14 29 31 32 36 37 38 40 47 53 60 61 63


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    Program <program_> (51)
        on left: 1
        on right: 0
    TopDef <topdef_> (52)
        on left: 2 3 4
        on right: 7 8
    ListClassMember <listclassmember_> (53)
        on left: 5 6
        on right: 3 4 6
    ListTopDef <listtopdef_> (54)
        on left: 7 8
        on right: 1 8
    Arg <arg_> (55)
        on left: 9
        on right: 11 12
    ListArg <listarg_> (56)
        on left: 10 11 12
        on right: 2 12 14
    ClassMember <classmember_> (57)
        on left: 13 14
        on right: 6
    Block <block_> (58)
        on left: 15
        on right: 2 14 19
    ListStmt <liststmt_> (59)
        on left: 16 17
        on right: 15 17
    Stmt <stmt_> (60)
        on left: 18 19 20 21 22 23 24 25 26 27 28 29 30
        on right: 17 26 27 28 29
    Item <item_> (61)
        on left: 31 32
        on right: 33 34
    ListItem <listitem_> (62)
        on left: 33 34
        on right: 13 20 34
    ComplexStart <complexstart_> (63)
        on left: 35 36 37 38 39
        on right: 35 62
    ComplexPart <complexpart_> (64)
        on left: 40 41 42 43
        on right: 70
    ArrType <arrtype_> (65)
        on left: 44 45 46 47
        on right: 39 52
    Type <type_> (66)
        on left: 48 49 50 51 52 53
        on right: 2 9 13 14 20 29
    ArrDimType <arrdimtype_> (67)
        on left: 54
        on right: 55 56
    ListArrDimType <listarrdimtype_> (68)
        on left: 55 56
        on right: 52 56
    DimDef <dimdef_> (69)
        on left: 57
        on right: 58 59
    ListDimDef <listdimdef_> (70)
        on left: 58 59
        on right: 37 41 59
    Expr6 <expr_> (71)
        on left: 60 61 62 63 64 65 66 67 68
        on right: 71 72 73
    ListComplexPart <listcomplexpart_> (72)
        on left: 69 70
        on right: 62 70
    Expr5 <expr_> (73)
        on left: 71 72 73
        on right: 74 75
    Expr4 <expr_> (74)
        on left: 74 75
        on right: 74 76 77
    Expr3 <expr_> (75)
        on left: 76 77
        on right: 76 78 79
    Expr2 <expr_> (76)
        on left: 78 79
        on right: 78 80 81
    Expr1 <expr_> (77)
        on left: 80 81
        on right: 80 82 83
    Expr <expr_> (78)
        on left: 82 83
        on right: 21 22 23 24 26 27 28 30 32 57 68 82 85 86
    ListExpr <listexpr_> (79)
        on left: 84 85 86
        on right: 38 42 86
    AddOp <addop_> (80)
        on left: 87 88
        on right: 76
    MulOp <mulop_> (81)
        on left: 89 90 91
        on right: 74
    RelOp <relop_> (82)
        on left: 92 93 94 95 96 97
        on right: 78


State 0

    0 $accept: . Program $end

    _KW_boolean  shift, and go to state 1
    _KW_class    shift, and go to state 2
    _KW_int      shift, and go to state 3
    _KW_string   shift, and go to state 4
    _KW_void     shift, and go to state 5
    _IDENT_      shift, and go to state 6

    Program     go to state 7
    TopDef      go to state 8
    ListTopDef  go to state 9
    ArrType     go to state 10
    Type        go to state 11


State 1

   46 ArrType: _KW_boolean .
   50 Type: _KW_boolean .

    _IDENT_   reduce using rule 50 (Type)
    $default  reduce using rule 46 (ArrType)


State 2

    3 TopDef: _KW_class . _IDENT_ _LBRACE ListClassMember _RBRACE
    4       | _KW_class . _IDENT_ _KW_extends _IDENT_ _LBRACE ListClassMember _RBRACE

    _IDENT_  shift, and go to state 12


State 3

   44 ArrType: _KW_int .
   48 Type: _KW_int .

    _IDENT_   reduce using rule 48 (Type)
    $default  reduce using rule 44 (ArrType)


State 4

   45 ArrType: _KW_string .
   49 Type: _KW_string .

    _IDENT_   reduce using rule 49 (Type)
    $default  reduce using rule 45 (ArrType)


State 5

   51 Type: _KW_void .

    $default  reduce using rule 51 (Type)


State 6

   47 ArrType: _IDENT_ .
   53 Type: _IDENT_ .

    _IDENT_   reduce using rule 53 (Type)
    $default  reduce using rule 47 (ArrType)


State 7

    0 $accept: Program . $end

    $end  shift, and go to state 13


State 8

    7 ListTopDef: TopDef .
    8           | TopDef . ListTopDef

    _KW_boolean  shift, and go to state 1
    _KW_class    shift, and go to state 2
    _KW_int      shift, and go to state 3
    _KW_string   shift, and go to state 4
    _KW_void     shift, and go to state 5
    _IDENT_      shift, and go to state 6

    $default  reduce using rule 7 (ListTopDef)

    TopDef      go to state 8
    ListTopDef  go to state 14
    ArrType     go to state 10
    Type        go to state 11


State 9

    1 Program: ListTopDef .

    $default  reduce using rule 1 (Program)


State 10

   52 Type: ArrType . ListArrDimType

    _EMPTYBRACK  shift, and go to state 15

    ArrDimType      go to state 16
    ListArrDimType  go to state 17


State 11

    2 TopDef: Type . _IDENT_ _LPAREN ListArg _RPAREN Block

    _IDENT_  shift, and go to state 18


State 12

    3 TopDef: _KW_class _IDENT_ . _LBRACE ListClassMember _RBRACE
    4       | _KW_class _IDENT_ . _KW_extends _IDENT_ _LBRACE ListClassMember _RBRACE

    _KW_extends  shift, and go to state 19
    _LBRACE      shift, and go to state 20


State 13

    0 $accept: Program $end .

    $default  accept


State 14

    8 ListTopDef: TopDef ListTopDef .

    $default  reduce using rule 8 (ListTopDef)


State 15

   54 ArrDimType: _EMPTYBRACK .

    $default  reduce using rule 54 (ArrDimType)


State 16

   55 ListArrDimType: ArrDimType .
   56               | ArrDimType . ListArrDimType

    _EMPTYBRACK  shift, and go to state 15

    $default  reduce using rule 55 (ListArrDimType)

    ArrDimType      go to state 16
    ListArrDimType  go to state 21


State 17

   52 Type: ArrType ListArrDimType .

    $default  reduce using rule 52 (Type)


State 18

    2 TopDef: Type _IDENT_ . _LPAREN ListArg _RPAREN Block

    _LPAREN  shift, and go to state 22


State 19

    4 TopDef: _KW_class _IDENT_ _KW_extends . _IDENT_ _LBRACE ListClassMember _RBRACE

    _IDENT_  shift, and go to state 23


State 20

    3 TopDef: _KW_class _IDENT_ _LBRACE . ListClassMember _RBRACE

    $default  reduce using rule 5 (ListClassMember)

    ListClassMember  go to state 24


State 21

   56 ListArrDimType: ArrDimType ListArrDimType .

    $default  reduce using rule 56 (ListArrDimType)


State 22

    2 TopDef: Type _IDENT_ _LPAREN . ListArg _RPAREN Block

    _KW_boolean  shift, and go to state 1
    _KW_int      shift, and go to state 3
    _KW_string   shift, and go to state 4
    _KW_void     shift, and go to state 5
    _IDENT_      shift, and go to state 6

    $default  reduce using rule 10 (ListArg)

    Arg      go to state 25
    ListArg  go to state 26
    ArrType  go to state 10
    Type     go to state 27


State 23

    4 TopDef: _KW_class _IDENT_ _KW_extends _IDENT_ . _LBRACE ListClassMember _RBRACE

    _LBRACE  shift, and go to state 28


State 24

    3 TopDef: _KW_class _IDENT_ _LBRACE ListClassMember . _RBRACE
    6 ListClassMember: ListClassMember . ClassMember

    _KW_boolean  shift, and go to state 1
    _KW_int      shift, and go to state 3
    _KW_string   shift, and go to state 4
    _KW_void     shift, and go to state 5
    _RBRACE      shift, and go to state 29
    _IDENT_      shift, and go to state 6

    ClassMember  go to state 30
    ArrType      go to state 10
    Type         go to state 31


State 25

   11 ListArg: Arg .
   12        | Arg . _COMMA ListArg

    _COMMA  shift, and go to state 32

    $default  reduce using rule 11 (ListArg)


State 26

    2 TopDef: Type _IDENT_ _LPAREN ListArg . _RPAREN Block

    _RPAREN  shift, and go to state 33


State 27

    9 Arg: Type . _IDENT_

    _IDENT_  shift, and go to state 34


State 28

    4 TopDef: _KW_class _IDENT_ _KW_extends _IDENT_ _LBRACE . ListClassMember _RBRACE

    $default  reduce using rule 5 (ListClassMember)

    ListClassMember  go to state 35


State 29

    3 TopDef: _KW_class _IDENT_ _LBRACE ListClassMember _RBRACE .

    $default  reduce using rule 3 (TopDef)


State 30

    6 ListClassMember: ListClassMember ClassMember .

    $default  reduce using rule 6 (ListClassMember)


State 31

   13 ClassMember: Type . ListItem _SEMI
   14            | Type . _IDENT_ _LPAREN ListArg _RPAREN Block

    _IDENT_  shift, and go to state 36

    Item      go to state 37
    ListItem  go to state 38


State 32

   12 ListArg: Arg _COMMA . ListArg

    _KW_boolean  shift, and go to state 1
    _KW_int      shift, and go to state 3
    _KW_string   shift, and go to state 4
    _KW_void     shift, and go to state 5
    _IDENT_      shift, and go to state 6

    $default  reduce using rule 10 (ListArg)

    Arg      go to state 25
    ListArg  go to state 39
    ArrType  go to state 10
    Type     go to state 27


State 33

    2 TopDef: Type _IDENT_ _LPAREN ListArg _RPAREN . Block

    _LBRACE  shift, and go to state 40

    Block  go to state 41


State 34

    9 Arg: Type _IDENT_ .

    $default  reduce using rule 9 (Arg)


State 35

    4 TopDef: _KW_class _IDENT_ _KW_extends _IDENT_ _LBRACE ListClassMember . _RBRACE
    6 ListClassMember: ListClassMember . ClassMember

    _KW_boolean  shift, and go to state 1
    _KW_int      shift, and go to state 3
    _KW_string   shift, and go to state 4
    _KW_void     shift, and go to state 5
    _RBRACE      shift, and go to state 42
    _IDENT_      shift, and go to state 6

    ClassMember  go to state 30
    ArrType      go to state 10
    Type         go to state 31


State 36

   14 ClassMember: Type _IDENT_ . _LPAREN ListArg _RPAREN Block
   31 Item: _IDENT_ .
   32     | _IDENT_ . _EQ Expr

    _LPAREN  shift, and go to state 43
    _EQ      shift, and go to state 44

    $default  reduce using rule 31 (Item)


State 37

   33 ListItem: Item .
   34         | Item . _COMMA ListItem

    _COMMA  shift, and go to state 45

    $default  reduce using rule 33 (ListItem)


State 38

   13 ClassMember: Type ListItem . _SEMI

    _SEMI  shift, and go to state 46


State 39

   12 ListArg: Arg _COMMA ListArg .

    $default  reduce using rule 12 (ListArg)


State 40

   15 Block: _LBRACE . ListStmt _RBRACE

    $default  reduce using rule 16 (ListStmt)

    ListStmt  go to state 47


State 41

    2 TopDef: Type _IDENT_ _LPAREN ListArg _RPAREN Block .

    $default  reduce using rule 2 (TopDef)


State 42

    4 TopDef: _KW_class _IDENT_ _KW_extends _IDENT_ _LBRACE ListClassMember _RBRACE .

    $default  reduce using rule 4 (TopDef)


State 43

   14 ClassMember: Type _IDENT_ _LPAREN . ListArg _RPAREN Block

    _KW_boolean  shift, and go to state 1
    _KW_int      shift, and go to state 3
    _KW_string   shift, and go to state 4
    _KW_void     shift, and go to state 5
    _IDENT_      shift, and go to state 6

    $default  reduce using rule 10 (ListArg)

    Arg      go to state 25
    ListArg  go to state 48
    ArrType  go to state 10
    Type     go to state 27


State 44

   32 Item: _IDENT_ _EQ . Expr

    _BANG      shift, and go to state 49
    _LPAREN    shift, and go to state 50
    _MINUS     shift, and go to state 51
    _KW_false  shift, and go to state 52
    _KW_new    shift, and go to state 53
    _KW_true   shift, and go to state 54
    _STRING_   shift, and go to state 55
    _INTEGER_  shift, and go to state 56
    _IDENT_    shift, and go to state 57

    ComplexStart  go to state 58
    Expr6         go to state 59
    Expr5         go to state 60
    Expr4         go to state 61
    Expr3         go to state 62
    Expr2         go to state 63
    Expr1         go to state 64
    Expr          go to state 65


State 45

   34 ListItem: Item _COMMA . ListItem

    _IDENT_  shift, and go to state 66

    Item      go to state 37
    ListItem  go to state 67


State 46

   13 ClassMember: Type ListItem _SEMI .

    $default  reduce using rule 13 (ClassMember)


State 47

   15 Block: _LBRACE ListStmt . _RBRACE
   17 ListStmt: ListStmt . Stmt

    _BANG        shift, and go to state 49
    _LPAREN      shift, and go to state 50
    _MINUS       shift, and go to state 51
    _SEMI        shift, and go to state 68
    _KW_boolean  shift, and go to state 1
    _KW_false    shift, and go to state 52
    _KW_for      shift, and go to state 69
    _KW_if       shift, and go to state 70
    _KW_int      shift, and go to state 3
    _KW_new      shift, and go to state 53
    _KW_return   shift, and go to state 71
    _KW_string   shift, and go to state 4
    _KW_true     shift, and go to state 54
    _KW_void     shift, and go to state 5
    _KW_while    shift, and go to state 72
    _LBRACE      shift, and go to state 40
    _RBRACE      shift, and go to state 73
    _STRING_     shift, and go to state 55
    _INTEGER_    shift, and go to state 56
    _IDENT_      shift, and go to state 74

    Block         go to state 75
    Stmt          go to state 76
    ComplexStart  go to state 58
    ArrType       go to state 10
    Type          go to state 77
    Expr6         go to state 59
    Expr5         go to state 60
    Expr4         go to state 61
    Expr3         go to state 62
    Expr2         go to state 63
    Expr1         go to state 64
    Expr          go to state 78


State 48

   14 ClassMember: Type _IDENT_ _LPAREN ListArg . _RPAREN Block

    _RPAREN  shift, and go to state 79


State 49

   72 Expr5: _BANG . Expr6

    _LPAREN    shift, and go to state 50
    _KW_false  shift, and go to state 52
    _KW_new    shift, and go to state 53
    _KW_true   shift, and go to state 54
    _STRING_   shift, and go to state 55
    _INTEGER_  shift, and go to state 56
    _IDENT_    shift, and go to state 57

    ComplexStart  go to state 58
    Expr6         go to state 80


State 50

   35 ComplexStart: _LPAREN . ComplexStart _RPAREN
   61 Expr6: _LPAREN . _IDENT_ _RPAREN
   63      | _LPAREN . _IDENT_ _RPAREN _KW_null
   68      | _LPAREN . Expr _RPAREN

    _BANG      shift, and go to state 49
    _LPAREN    shift, and go to state 50
    _MINUS     shift, and go to state 51
    _KW_false  shift, and go to state 52
    _KW_new    shift, and go to state 53
    _KW_true   shift, and go to state 54
    _STRING_   shift, and go to state 55
    _INTEGER_  shift, and go to state 56
    _IDENT_    shift, and go to state 81

    ComplexStart  go to state 82
    Expr6         go to state 59
    Expr5         go to state 60
    Expr4         go to state 61
    Expr3         go to state 62
    Expr2         go to state 63
    Expr1         go to state 64
    Expr          go to state 83


State 51

   71 Expr5: _MINUS . Expr6

    _LPAREN    shift, and go to state 50
    _KW_false  shift, and go to state 52
    _KW_new    shift, and go to state 53
    _KW_true   shift, and go to state 54
    _STRING_   shift, and go to state 55
    _INTEGER_  shift, and go to state 56
    _IDENT_    shift, and go to state 57

    ComplexStart  go to state 58
    Expr6         go to state 84


State 52

   66 Expr6: _KW_false .

    $default  reduce using rule 66 (Expr6)


State 53

   39 ComplexStart: _KW_new . ArrType

    _KW_boolean  shift, and go to state 85
    _KW_int      shift, and go to state 86
    _KW_string   shift, and go to state 87
    _IDENT_      shift, and go to state 88

    ArrType  go to state 89


State 54

   65 Expr6: _KW_true .

    $default  reduce using rule 65 (Expr6)


State 55

   67 Expr6: _STRING_ .

    $default  reduce using rule 67 (Expr6)


State 56

   64 Expr6: _INTEGER_ .

    $default  reduce using rule 64 (Expr6)


State 57

   36 ComplexStart: _IDENT_ . _DOT _IDENT_
   37             | _IDENT_ . ListDimDef
   38             | _IDENT_ . _LPAREN ListExpr _RPAREN
   60 Expr6: _IDENT_ .

    _LPAREN  shift, and go to state 90
    _DOT     shift, and go to state 91
    _LBRACK  shift, and go to state 92

    $default  reduce using rule 60 (Expr6)

    DimDef      go to state 93
    ListDimDef  go to state 94


State 58

   62 Expr6: ComplexStart . ListComplexPart

    $default  reduce using rule 69 (ListComplexPart)

    ListComplexPart  go to state 95


State 59

   73 Expr5: Expr6 .

    $default  reduce using rule 73 (Expr5)


State 60

   75 Expr4: Expr5 .

    $default  reduce using rule 75 (Expr4)


State 61

   74 Expr4: Expr4 . MulOp Expr5
   77 Expr3: Expr4 .

    _PERCENT  shift, and go to state 96
    _STAR     shift, and go to state 97
    _SLASH    shift, and go to state 98

    $default  reduce using rule 77 (Expr3)

    MulOp  go to state 99


State 62

   76 Expr3: Expr3 . AddOp Expr4
   79 Expr2: Expr3 .

    _PLUS   shift, and go to state 100
    _MINUS  shift, and go to state 101

    $default  reduce using rule 79 (Expr2)

    AddOp  go to state 102


State 63

   78 Expr2: Expr2 . RelOp Expr3
   80 Expr1: Expr2 . _DAMP Expr1
   81      | Expr2 .

    _BANGEQ   shift, and go to state 103
    _DAMP     shift, and go to state 104
    _LT       shift, and go to state 105
    _LDARROW  shift, and go to state 106
    _DEQ      shift, and go to state 107
    _GT       shift, and go to state 108
    _GTEQ     shift, and go to state 109

    $default  reduce using rule 81 (Expr1)

    RelOp  go to state 110


State 64

   82 Expr: Expr1 . _DBAR Expr
   83     | Expr1 .

    _DBAR  shift, and go to state 111

    $default  reduce using rule 83 (Expr)


State 65

   32 Item: _IDENT_ _EQ Expr .

    $default  reduce using rule 32 (Item)


State 66

   31 Item: _IDENT_ .
   32     | _IDENT_ . _EQ Expr

    _EQ  shift, and go to state 44

    $default  reduce using rule 31 (Item)


State 67

   34 ListItem: Item _COMMA ListItem .

    $default  reduce using rule 34 (ListItem)


State 68

   18 Stmt: _SEMI .

    $default  reduce using rule 18 (Stmt)


State 69

   29 Stmt: _KW_for . _LPAREN Type _IDENT_ _COLON _IDENT_ _RPAREN Stmt

    _LPAREN  shift, and go to state 112


State 70

   26 Stmt: _KW_if . _LPAREN Expr _RPAREN Stmt
   27     | _KW_if . _LPAREN Expr _RPAREN Stmt _KW_else Stmt

    _LPAREN  shift, and go to state 113


State 71

   24 Stmt: _KW_return . Expr _SEMI
   25     | _KW_return . _SEMI

    _BANG      shift, and go to state 49
    _LPAREN    shift, and go to state 50
    _MINUS     shift, and go to state 51
    _SEMI      shift, and go to state 114
    _KW_false  shift, and go to state 52
    _KW_new    shift, and go to state 53
    _KW_true   shift, and go to state 54
    _STRING_   shift, and go to state 55
    _INTEGER_  shift, and go to state 56
    _IDENT_    shift, and go to state 57

    ComplexStart  go to state 58
    Expr6         go to state 59
    Expr5         go to state 60
    Expr4         go to state 61
    Expr3         go to state 62
    Expr2         go to state 63
    Expr1         go to state 64
    Expr          go to state 115


State 72

   28 Stmt: _KW_while . _LPAREN Expr _RPAREN Stmt

    _LPAREN  shift, and go to state 116


State 73

   15 Block: _LBRACE ListStmt _RBRACE .

    $default  reduce using rule 15 (Block)


State 74

   36 ComplexStart: _IDENT_ . _DOT _IDENT_
   37             | _IDENT_ . ListDimDef
   38             | _IDENT_ . _LPAREN ListExpr _RPAREN
   47 ArrType: _IDENT_ .
   53 Type: _IDENT_ .
   60 Expr6: _IDENT_ .

    _LPAREN  shift, and go to state 90
    _DOT     shift, and go to state 91
    _LBRACK  shift, and go to state 92

    _EMPTYBRACK  reduce using rule 47 (ArrType)
    _IDENT_      reduce using rule 53 (Type)
    $default     reduce using rule 60 (Expr6)

    DimDef      go to state 93
    ListDimDef  go to state 94


State 75

   19 Stmt: Block .

    $default  reduce using rule 19 (Stmt)


State 76

   17 ListStmt: ListStmt Stmt .

    $default  reduce using rule 17 (ListStmt)


State 77

   20 Stmt: Type . ListItem _SEMI

    _IDENT_  shift, and go to state 66

    Item      go to state 37
    ListItem  go to state 117


State 78

   21 Stmt: Expr . _EQ Expr _SEMI
   22     | Expr . _DPLUS _SEMI
   23     | Expr . _DMINUS _SEMI
   30     | Expr . _SEMI

    _DPLUS   shift, and go to state 118
    _DMINUS  shift, and go to state 119
    _SEMI    shift, and go to state 120
    _EQ      shift, and go to state 121


State 79

   14 ClassMember: Type _IDENT_ _LPAREN ListArg _RPAREN . Block

    _LBRACE  shift, and go to state 40

    Block  go to state 122


State 80

   72 Expr5: _BANG Expr6 .

    $default  reduce using rule 72 (Expr5)


State 81

   36 ComplexStart: _IDENT_ . _DOT _IDENT_
   37             | _IDENT_ . ListDimDef
   38             | _IDENT_ . _LPAREN ListExpr _RPAREN
   60 Expr6: _IDENT_ .
   61      | _LPAREN _IDENT_ . _RPAREN
   63      | _LPAREN _IDENT_ . _RPAREN _KW_null

    _LPAREN  shift, and go to state 90
    _RPAREN  shift, and go to state 123
    _DOT     shift, and go to state 91
    _LBRACK  shift, and go to state 92

    _RPAREN   [reduce using rule 60 (Expr6)]
    $default  reduce using rule 60 (Expr6)

    DimDef      go to state 93
    ListDimDef  go to state 94


State 82

   35 ComplexStart: _LPAREN ComplexStart . _RPAREN
   62 Expr6: ComplexStart . ListComplexPart

    _RPAREN  shift, and go to state 124

    _RPAREN   [reduce using rule 69 (ListComplexPart)]
    $default  reduce using rule 69 (ListComplexPart)

    ListComplexPart  go to state 95


State 83

   68 Expr6: _LPAREN Expr . _RPAREN

    _RPAREN  shift, and go to state 125


State 84

   71 Expr5: _MINUS Expr6 .

    $default  reduce using rule 71 (Expr5)


State 85

   46 ArrType: _KW_boolean .

    $default  reduce using rule 46 (ArrType)


State 86

   44 ArrType: _KW_int .

    $default  reduce using rule 44 (ArrType)


State 87

   45 ArrType: _KW_string .

    $default  reduce using rule 45 (ArrType)


State 88

   47 ArrType: _IDENT_ .

    $default  reduce using rule 47 (ArrType)


State 89

   39 ComplexStart: _KW_new ArrType .

    $default  reduce using rule 39 (ComplexStart)


State 90

   38 ComplexStart: _IDENT_ _LPAREN . ListExpr _RPAREN

    _BANG      shift, and go to state 49
    _LPAREN    shift, and go to state 50
    _MINUS     shift, and go to state 51
    _KW_false  shift, and go to state 52
    _KW_new    shift, and go to state 53
    _KW_true   shift, and go to state 54
    _STRING_   shift, and go to state 55
    _INTEGER_  shift, and go to state 56
    _IDENT_    shift, and go to state 57

    $default  reduce using rule 84 (ListExpr)

    ComplexStart  go to state 58
    Expr6         go to state 59
    Expr5         go to state 60
    Expr4         go to state 61
    Expr3         go to state 62
    Expr2         go to state 63
    Expr1         go to state 64
    Expr          go to state 126
    ListExpr      go to state 127


State 91

   36 ComplexStart: _IDENT_ _DOT . _IDENT_

    _IDENT_  shift, and go to state 128


State 92

   57 DimDef: _LBRACK . Expr _RBRACK

    _BANG      shift, and go to state 49
    _LPAREN    shift, and go to state 50
    _MINUS     shift, and go to state 51
    _KW_false  shift, and go to state 52
    _KW_new    shift, and go to state 53
    _KW_true   shift, and go to state 54
    _STRING_   shift, and go to state 55
    _INTEGER_  shift, and go to state 56
    _IDENT_    shift, and go to state 57

    ComplexStart  go to state 58
    Expr6         go to state 59
    Expr5         go to state 60
    Expr4         go to state 61
    Expr3         go to state 62
    Expr2         go to state 63
    Expr1         go to state 64
    Expr          go to state 129


State 93

   58 ListDimDef: DimDef .
   59           | DimDef . ListDimDef

    _LBRACK  shift, and go to state 92

    _LBRACK   [reduce using rule 58 (ListDimDef)]
    $default  reduce using rule 58 (ListDimDef)

    DimDef      go to state 93
    ListDimDef  go to state 130


State 94

   37 ComplexStart: _IDENT_ ListDimDef .

    $default  reduce using rule 37 (ComplexStart)


State 95

   62 Expr6: ComplexStart ListComplexPart .
   70 ListComplexPart: ListComplexPart . ComplexPart

    _LPAREN  shift, and go to state 131
    _DOT     shift, and go to state 132
    _LBRACK  shift, and go to state 92
    _IDENT_  shift, and go to state 133

    $default  reduce using rule 62 (Expr6)

    ComplexPart  go to state 134
    DimDef       go to state 93
    ListDimDef   go to state 135


State 96

   91 MulOp: _PERCENT .

    $default  reduce using rule 91 (MulOp)


State 97

   89 MulOp: _STAR .

    $default  reduce using rule 89 (MulOp)


State 98

   90 MulOp: _SLASH .

    $default  reduce using rule 90 (MulOp)


State 99

   74 Expr4: Expr4 MulOp . Expr5

    _BANG      shift, and go to state 49
    _LPAREN    shift, and go to state 50
    _MINUS     shift, and go to state 51
    _KW_false  shift, and go to state 52
    _KW_new    shift, and go to state 53
    _KW_true   shift, and go to state 54
    _STRING_   shift, and go to state 55
    _INTEGER_  shift, and go to state 56
    _IDENT_    shift, and go to state 57

    ComplexStart  go to state 58
    Expr6         go to state 59
    Expr5         go to state 136


State 100

   87 AddOp: _PLUS .

    $default  reduce using rule 87 (AddOp)


State 101

   88 AddOp: _MINUS .

    $default  reduce using rule 88 (AddOp)


State 102

   76 Expr3: Expr3 AddOp . Expr4

    _BANG      shift, and go to state 49
    _LPAREN    shift, and go to state 50
    _MINUS     shift, and go to state 51
    _KW_false  shift, and go to state 52
    _KW_new    shift, and go to state 53
    _KW_true   shift, and go to state 54
    _STRING_   shift, and go to state 55
    _INTEGER_  shift, and go to state 56
    _IDENT_    shift, and go to state 57

    ComplexStart  go to state 58
    Expr6         go to state 59
    Expr5         go to state 60
    Expr4         go to state 137


State 103

   97 RelOp: _BANGEQ .

    $default  reduce using rule 97 (RelOp)


State 104

   80 Expr1: Expr2 _DAMP . Expr1

    _BANG      shift, and go to state 49
    _LPAREN    shift, and go to state 50
    _MINUS     shift, and go to state 51
    _KW_false  shift, and go to state 52
    _KW_new    shift, and go to state 53
    _KW_true   shift, and go to state 54
    _STRING_   shift, and go to state 55
    _INTEGER_  shift, and go to state 56
    _IDENT_    shift, and go to state 57

    ComplexStart  go to state 58
    Expr6         go to state 59
    Expr5         go to state 60
    Expr4         go to state 61
    Expr3         go to state 62
    Expr2         go to state 63
    Expr1         go to state 138


State 105

   92 RelOp: _LT .

    $default  reduce using rule 92 (RelOp)


State 106

   93 RelOp: _LDARROW .

    $default  reduce using rule 93 (RelOp)


State 107

   96 RelOp: _DEQ .

    $default  reduce using rule 96 (RelOp)


State 108

   94 RelOp: _GT .

    $default  reduce using rule 94 (RelOp)


State 109

   95 RelOp: _GTEQ .

    $default  reduce using rule 95 (RelOp)


State 110

   78 Expr2: Expr2 RelOp . Expr3

    _BANG      shift, and go to state 49
    _LPAREN    shift, and go to state 50
    _MINUS     shift, and go to state 51
    _KW_false  shift, and go to state 52
    _KW_new    shift, and go to state 53
    _KW_true   shift, and go to state 54
    _STRING_   shift, and go to state 55
    _INTEGER_  shift, and go to state 56
    _IDENT_    shift, and go to state 57

    ComplexStart  go to state 58
    Expr6         go to state 59
    Expr5         go to state 60
    Expr4         go to state 61
    Expr3         go to state 139


State 111

   82 Expr: Expr1 _DBAR . Expr

    _BANG      shift, and go to state 49
    _LPAREN    shift, and go to state 50
    _MINUS     shift, and go to state 51
    _KW_false  shift, and go to state 52
    _KW_new    shift, and go to state 53
    _KW_true   shift, and go to state 54
    _STRING_   shift, and go to state 55
    _INTEGER_  shift, and go to state 56
    _IDENT_    shift, and go to state 57

    ComplexStart  go to state 58
    Expr6         go to state 59
    Expr5         go to state 60
    Expr4         go to state 61
    Expr3         go to state 62
    Expr2         go to state 63
    Expr1         go to state 64
    Expr          go to state 140


State 112

   29 Stmt: _KW_for _LPAREN . Type _IDENT_ _COLON _IDENT_ _RPAREN Stmt

    _KW_boolean  shift, and go to state 1
    _KW_int      shift, and go to state 3
    _KW_string   shift, and go to state 4
    _KW_void     shift, and go to state 5
    _IDENT_      shift, and go to state 6

    ArrType  go to state 10
    Type     go to state 141


State 113

   26 Stmt: _KW_if _LPAREN . Expr _RPAREN Stmt
   27     | _KW_if _LPAREN . Expr _RPAREN Stmt _KW_else Stmt

    _BANG      shift, and go to state 49
    _LPAREN    shift, and go to state 50
    _MINUS     shift, and go to state 51
    _KW_false  shift, and go to state 52
    _KW_new    shift, and go to state 53
    _KW_true   shift, and go to state 54
    _STRING_   shift, and go to state 55
    _INTEGER_  shift, and go to state 56
    _IDENT_    shift, and go to state 57

    ComplexStart  go to state 58
    Expr6         go to state 59
    Expr5         go to state 60
    Expr4         go to state 61
    Expr3         go to state 62
    Expr2         go to state 63
    Expr1         go to state 64
    Expr          go to state 142


State 114

   25 Stmt: _KW_return _SEMI .

    $default  reduce using rule 25 (Stmt)


State 115

   24 Stmt: _KW_return Expr . _SEMI

    _SEMI  shift, and go to state 143


State 116

   28 Stmt: _KW_while _LPAREN . Expr _RPAREN Stmt

    _BANG      shift, and go to state 49
    _LPAREN    shift, and go to state 50
    _MINUS     shift, and go to state 51
    _KW_false  shift, and go to state 52
    _KW_new    shift, and go to state 53
    _KW_true   shift, and go to state 54
    _STRING_   shift, and go to state 55
    _INTEGER_  shift, and go to state 56
    _IDENT_    shift, and go to state 57

    ComplexStart  go to state 58
    Expr6         go to state 59
    Expr5         go to state 60
    Expr4         go to state 61
    Expr3         go to state 62
    Expr2         go to state 63
    Expr1         go to state 64
    Expr          go to state 144


State 117

   20 Stmt: Type ListItem . _SEMI

    _SEMI  shift, and go to state 145


State 118

   22 Stmt: Expr _DPLUS . _SEMI

    _SEMI  shift, and go to state 146


State 119

   23 Stmt: Expr _DMINUS . _SEMI

    _SEMI  shift, and go to state 147


State 120

   30 Stmt: Expr _SEMI .

    $default  reduce using rule 30 (Stmt)


State 121

   21 Stmt: Expr _EQ . Expr _SEMI

    _BANG      shift, and go to state 49
    _LPAREN    shift, and go to state 50
    _MINUS     shift, and go to state 51
    _KW_false  shift, and go to state 52
    _KW_new    shift, and go to state 53
    _KW_true   shift, and go to state 54
    _STRING_   shift, and go to state 55
    _INTEGER_  shift, and go to state 56
    _IDENT_    shift, and go to state 57

    ComplexStart  go to state 58
    Expr6         go to state 59
    Expr5         go to state 60
    Expr4         go to state 61
    Expr3         go to state 62
    Expr2         go to state 63
    Expr1         go to state 64
    Expr          go to state 148


State 122

   14 ClassMember: Type _IDENT_ _LPAREN ListArg _RPAREN Block .

    $default  reduce using rule 14 (ClassMember)


State 123

   61 Expr6: _LPAREN _IDENT_ _RPAREN .
   63      | _LPAREN _IDENT_ _RPAREN . _KW_null

    _KW_null  shift, and go to state 149

    $default  reduce using rule 61 (Expr6)


State 124

   35 ComplexStart: _LPAREN ComplexStart _RPAREN .

    $default  reduce using rule 35 (ComplexStart)


State 125

   68 Expr6: _LPAREN Expr _RPAREN .

    $default  reduce using rule 68 (Expr6)


State 126

   85 ListExpr: Expr .
   86         | Expr . _COMMA ListExpr

    _COMMA  shift, and go to state 150

    $default  reduce using rule 85 (ListExpr)


State 127

   38 ComplexStart: _IDENT_ _LPAREN ListExpr . _RPAREN

    _RPAREN  shift, and go to state 151


State 128

   36 ComplexStart: _IDENT_ _DOT _IDENT_ .

    $default  reduce using rule 36 (ComplexStart)


State 129

   57 DimDef: _LBRACK Expr . _RBRACK

    _RBRACK  shift, and go to state 152


State 130

   59 ListDimDef: DimDef ListDimDef .

    $default  reduce using rule 59 (ListDimDef)


State 131

   42 ComplexPart: _LPAREN . ListExpr _RPAREN

    _BANG      shift, and go to state 49
    _LPAREN    shift, and go to state 50
    _MINUS     shift, and go to state 51
    _KW_false  shift, and go to state 52
    _KW_new    shift, and go to state 53
    _KW_true   shift, and go to state 54
    _STRING_   shift, and go to state 55
    _INTEGER_  shift, and go to state 56
    _IDENT_    shift, and go to state 57

    $default  reduce using rule 84 (ListExpr)

    ComplexStart  go to state 58
    Expr6         go to state 59
    Expr5         go to state 60
    Expr4         go to state 61
    Expr3         go to state 62
    Expr2         go to state 63
    Expr1         go to state 64
    Expr          go to state 126
    ListExpr      go to state 153


State 132

   43 ComplexPart: _DOT .

    $default  reduce using rule 43 (ComplexPart)


State 133

   40 ComplexPart: _IDENT_ .

    $default  reduce using rule 40 (ComplexPart)


State 134

   70 ListComplexPart: ListComplexPart ComplexPart .

    $default  reduce using rule 70 (ListComplexPart)


State 135

   41 ComplexPart: ListDimDef .

    $default  reduce using rule 41 (ComplexPart)


State 136

   74 Expr4: Expr4 MulOp Expr5 .

    $default  reduce using rule 74 (Expr4)


State 137

   74 Expr4: Expr4 . MulOp Expr5
   76 Expr3: Expr3 AddOp Expr4 .

    _PERCENT  shift, and go to state 96
    _STAR     shift, and go to state 97
    _SLASH    shift, and go to state 98

    $default  reduce using rule 76 (Expr3)

    MulOp  go to state 99


State 138

   80 Expr1: Expr2 _DAMP Expr1 .

    $default  reduce using rule 80 (Expr1)


State 139

   76 Expr3: Expr3 . AddOp Expr4
   78 Expr2: Expr2 RelOp Expr3 .

    _PLUS   shift, and go to state 100
    _MINUS  shift, and go to state 101

    $default  reduce using rule 78 (Expr2)

    AddOp  go to state 102


State 140

   82 Expr: Expr1 _DBAR Expr .

    $default  reduce using rule 82 (Expr)


State 141

   29 Stmt: _KW_for _LPAREN Type . _IDENT_ _COLON _IDENT_ _RPAREN Stmt

    _IDENT_  shift, and go to state 154


State 142

   26 Stmt: _KW_if _LPAREN Expr . _RPAREN Stmt
   27     | _KW_if _LPAREN Expr . _RPAREN Stmt _KW_else Stmt

    _RPAREN  shift, and go to state 155


State 143

   24 Stmt: _KW_return Expr _SEMI .

    $default  reduce using rule 24 (Stmt)


State 144

   28 Stmt: _KW_while _LPAREN Expr . _RPAREN Stmt

    _RPAREN  shift, and go to state 156


State 145

   20 Stmt: Type ListItem _SEMI .

    $default  reduce using rule 20 (Stmt)


State 146

   22 Stmt: Expr _DPLUS _SEMI .

    $default  reduce using rule 22 (Stmt)


State 147

   23 Stmt: Expr _DMINUS _SEMI .

    $default  reduce using rule 23 (Stmt)


State 148

   21 Stmt: Expr _EQ Expr . _SEMI

    _SEMI  shift, and go to state 157


State 149

   63 Expr6: _LPAREN _IDENT_ _RPAREN _KW_null .

    $default  reduce using rule 63 (Expr6)


State 150

   86 ListExpr: Expr _COMMA . ListExpr

    _BANG      shift, and go to state 49
    _LPAREN    shift, and go to state 50
    _MINUS     shift, and go to state 51
    _KW_false  shift, and go to state 52
    _KW_new    shift, and go to state 53
    _KW_true   shift, and go to state 54
    _STRING_   shift, and go to state 55
    _INTEGER_  shift, and go to state 56
    _IDENT_    shift, and go to state 57

    $default  reduce using rule 84 (ListExpr)

    ComplexStart  go to state 58
    Expr6         go to state 59
    Expr5         go to state 60
    Expr4         go to state 61
    Expr3         go to state 62
    Expr2         go to state 63
    Expr1         go to state 64
    Expr          go to state 126
    ListExpr      go to state 158


State 151

   38 ComplexStart: _IDENT_ _LPAREN ListExpr _RPAREN .

    $default  reduce using rule 38 (ComplexStart)


State 152

   57 DimDef: _LBRACK Expr _RBRACK .

    $default  reduce using rule 57 (DimDef)


State 153

   42 ComplexPart: _LPAREN ListExpr . _RPAREN

    _RPAREN  shift, and go to state 159


State 154

   29 Stmt: _KW_for _LPAREN Type _IDENT_ . _COLON _IDENT_ _RPAREN Stmt

    _COLON  shift, and go to state 160


State 155

   26 Stmt: _KW_if _LPAREN Expr _RPAREN . Stmt
   27     | _KW_if _LPAREN Expr _RPAREN . Stmt _KW_else Stmt

    _BANG        shift, and go to state 49
    _LPAREN      shift, and go to state 50
    _MINUS       shift, and go to state 51
    _SEMI        shift, and go to state 68
    _KW_boolean  shift, and go to state 1
    _KW_false    shift, and go to state 52
    _KW_for      shift, and go to state 69
    _KW_if       shift, and go to state 70
    _KW_int      shift, and go to state 3
    _KW_new      shift, and go to state 53
    _KW_return   shift, and go to state 71
    _KW_string   shift, and go to state 4
    _KW_true     shift, and go to state 54
    _KW_void     shift, and go to state 5
    _KW_while    shift, and go to state 72
    _LBRACE      shift, and go to state 40
    _STRING_     shift, and go to state 55
    _INTEGER_    shift, and go to state 56
    _IDENT_      shift, and go to state 74

    Block         go to state 75
    Stmt          go to state 161
    ComplexStart  go to state 58
    ArrType       go to state 10
    Type          go to state 77
    Expr6         go to state 59
    Expr5         go to state 60
    Expr4         go to state 61
    Expr3         go to state 62
    Expr2         go to state 63
    Expr1         go to state 64
    Expr          go to state 78


State 156

   28 Stmt: _KW_while _LPAREN Expr _RPAREN . Stmt

    _BANG        shift, and go to state 49
    _LPAREN      shift, and go to state 50
    _MINUS       shift, and go to state 51
    _SEMI        shift, and go to state 68
    _KW_boolean  shift, and go to state 1
    _KW_false    shift, and go to state 52
    _KW_for      shift, and go to state 69
    _KW_if       shift, and go to state 70
    _KW_int      shift, and go to state 3
    _KW_new      shift, and go to state 53
    _KW_return   shift, and go to state 71
    _KW_string   shift, and go to state 4
    _KW_true     shift, and go to state 54
    _KW_void     shift, and go to state 5
    _KW_while    shift, and go to state 72
    _LBRACE      shift, and go to state 40
    _STRING_     shift, and go to state 55
    _INTEGER_    shift, and go to state 56
    _IDENT_      shift, and go to state 74

    Block         go to state 75
    Stmt          go to state 162
    ComplexStart  go to state 58
    ArrType       go to state 10
    Type          go to state 77
    Expr6         go to state 59
    Expr5         go to state 60
    Expr4         go to state 61
    Expr3         go to state 62
    Expr2         go to state 63
    Expr1         go to state 64
    Expr          go to state 78


State 157

   21 Stmt: Expr _EQ Expr _SEMI .

    $default  reduce using rule 21 (Stmt)


State 158

   86 ListExpr: Expr _COMMA ListExpr .

    $default  reduce using rule 86 (ListExpr)


State 159

   42 ComplexPart: _LPAREN ListExpr _RPAREN .

    $default  reduce using rule 42 (ComplexPart)


State 160

   29 Stmt: _KW_for _LPAREN Type _IDENT_ _COLON . _IDENT_ _RPAREN Stmt

    _IDENT_  shift, and go to state 163


State 161

   26 Stmt: _KW_if _LPAREN Expr _RPAREN Stmt .
   27     | _KW_if _LPAREN Expr _RPAREN Stmt . _KW_else Stmt

    _KW_else  shift, and go to state 164

    _KW_else  [reduce using rule 26 (Stmt)]
    $default  reduce using rule 26 (Stmt)


State 162

   28 Stmt: _KW_while _LPAREN Expr _RPAREN Stmt .

    $default  reduce using rule 28 (Stmt)


State 163

   29 Stmt: _KW_for _LPAREN Type _IDENT_ _COLON _IDENT_ . _RPAREN Stmt

    _RPAREN  shift, and go to state 165


State 164

   27 Stmt: _KW_if _LPAREN Expr _RPAREN Stmt _KW_else . Stmt

    _BANG        shift, and go to state 49
    _LPAREN      shift, and go to state 50
    _MINUS       shift, and go to state 51
    _SEMI        shift, and go to state 68
    _KW_boolean  shift, and go to state 1
    _KW_false    shift, and go to state 52
    _KW_for      shift, and go to state 69
    _KW_if       shift, and go to state 70
    _KW_int      shift, and go to state 3
    _KW_new      shift, and go to state 53
    _KW_return   shift, and go to state 71
    _KW_string   shift, and go to state 4
    _KW_true     shift, and go to state 54
    _KW_void     shift, and go to state 5
    _KW_while    shift, and go to state 72
    _LBRACE      shift, and go to state 40
    _STRING_     shift, and go to state 55
    _INTEGER_    shift, and go to state 56
    _IDENT_      shift, and go to state 74

    Block         go to state 75
    Stmt          go to state 166
    ComplexStart  go to state 58
    ArrType       go to state 10
    Type          go to state 77
    Expr6         go to state 59
    Expr5         go to state 60
    Expr4         go to state 61
    Expr3         go to state 62
    Expr2         go to state 63
    Expr1         go to state 64
    Expr          go to state 78


State 165

   29 Stmt: _KW_for _LPAREN Type _IDENT_ _COLON _IDENT_ _RPAREN . Stmt

    _BANG        shift, and go to state 49
    _LPAREN      shift, and go to state 50
    _MINUS       shift, and go to state 51
    _SEMI        shift, and go to state 68
    _KW_boolean  shift, and go to state 1
    _KW_false    shift, and go to state 52
    _KW_for      shift, and go to state 69
    _KW_if       shift, and go to state 70
    _KW_int      shift, and go to state 3
    _KW_new      shift, and go to state 53
    _KW_return   shift, and go to state 71
    _KW_string   shift, and go to state 4
    _KW_true     shift, and go to state 54
    _KW_void     shift, and go to state 5
    _KW_while    shift, and go to state 72
    _LBRACE      shift, and go to state 40
    _STRING_     shift, and go to state 55
    _INTEGER_    shift, and go to state 56
    _IDENT_      shift, and go to state 74

    Block         go to state 75
    Stmt          go to state 167
    ComplexStart  go to state 58
    ArrType       go to state 10
    Type          go to state 77
    Expr6         go to state 59
    Expr5         go to state 60
    Expr4         go to state 61
    Expr3         go to state 62
    Expr2         go to state 63
    Expr1         go to state 64
    Expr          go to state 78


State 166

   27 Stmt: _KW_if _LPAREN Expr _RPAREN Stmt _KW_else Stmt .

    $default  reduce using rule 27 (Stmt)


State 167

   29 Stmt: _KW_for _LPAREN Type _IDENT_ _COLON _IDENT_ _RPAREN Stmt .

    $default  reduce using rule 29 (Stmt)
