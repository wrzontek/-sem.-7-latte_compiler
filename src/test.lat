//class A {
//    int []arr = (new int[1]);
//    A a;
////    B b;
////
//    int x = f(1, "a");
////    int attr;
//
////    int length;
//    int f(int a, string b) { return 123; }
////
////    int []arr;
////    A []arr2;
////
//////    int y = arr[x];
////
////    int x = a.length;
//}

//int f(int a) {
//    {
//        string a;
//    }
//    return 1;
//}
//// call bez self - funkcja globalna, z self - metoda
//
//class D extends C {
//    int i = self.f(5);
//    int []arrr;
//    int ele = arrr[7];
//}
//
//class C extends A {
//    int f(int a) { return 2; }
//    int x = self.y;
//    A a;
//    boolean b = a == (A) null;
//}
//
class A {
    int f(int a) { return 1; }
    int x = 4;
}

class B extends A {
    int x = 16; // todo legalne
    int f(int a) { return 2; } // na pewno legalne
}

class C {
    B b;
    A a = b;
}
//
//class B {
//    A a;
//    int attr;
//
//    int x = a.attr;
//}
//
//
//string g(int a) { return "aaa"; }

int f(int a) { return 1; }


int main() {
    A a;
    int x = f(f(1)); // todo sprawdziÄ‡ podobne dla metod
    int y = a.f(a.f(1));
    return 1;
//    return (a);
//    Class[] a;
//    Inst[1];
}
