main:
	_t1 := _call fac 10 ;
	_t2 := _call printInt _t1 ;
	_t3 := _call rfac 10 ;
	_t4 := _call printInt _t3 ;
	_t5 := _call mfac 10 ;
	_t6 := _call printInt _t5 ;
	_t7 := _call ifac 10 ;
	_t8 := _call printInt _t7 ;
	_d0_r := ""
	_go_next _t1
_t1:
	_d1_n := 10
	_d1_r := 1
	_goto _while_cond_2
_while_body_2:
	_t9 := _d1_r * _d1_n
	_d1_r := _t9
	_d1_n := _d1_n - 1
	_go_next _while_cond_2
_while_cond_2:
	_t10 := _d1_n > 0
	if _t10 then _goto _while_body_2 else _goto _end_while_2
_end_while_2:
	_t11 := _call printInt _d1_r ;
	_go_next _after_t1
_after_t1:
	_t12 := _call printString "hello */" ;
	_t13 := _call printString "/* world" ;
	return 0

fac:
	_d0_r := 0
	_d0_n := 0
	_d0_r := 1
	_d0_n := __arg__0
	_goto _while_cond_3
_while_body_3:
	_t14 := _d0_r * _d0_n
	_d0_r := _t14
	_t15 := _d0_n - 1
	_d0_n := _t15
	_go_next _while_cond_3
_while_cond_3:
	_t16 := _d0_n > 0
	if _t16 then _goto _while_body_3 else _goto _end_while_3
_end_while_3:
	return _d0_r

rfac:
	_t17 := __arg__0 == 0
	if _t17 then _goto _if_true_4 else _goto _if_false_4
_if_true_4:
	return 1
	return;
_if_false_4:
	_t18 := __arg__0 - 1
	_t19 := _call rfac _t18 ;
	_t20 := __arg__0 * _t19
	return _t20
	return;

mfac:
	_t21 := __arg__0 == 0
	if _t21 then _goto _if_true_5 else _goto _if_false_5
_if_true_5:
	return 1
	return;
_if_false_5:
	_t22 := __arg__0 - 1
	_t23 := _call nfac _t22 ;
	_t24 := __arg__0 * _t23
	return _t24
	return;

nfac:
	_t25 := __arg__0 != 0
	if _t25 then _goto _if_true_6 else _goto _if_false_6
_if_true_6:
	_t26 := __arg__0 - 1
	_t27 := _call mfac _t26 ;
	_t28 := _t27 * __arg__0
	return _t28
	return;
_if_false_6:
	return 1
	return;

ifac:
	_t29 := _call ifac2f 1 __arg__0 ;
	return _t29

ifac2f:
	_t30 := __arg__0 == __arg__1
	if _t30 then _goto _if_true_7 else _goto _end_if_7
_if_true_7:
	return __arg__0
	_go_next _end_if_7
_end_if_7:
	_t31 := __arg__0 > __arg__1
	if _t31 then _goto _if_true_8 else _goto _end_if_8
_if_true_8:
	return 1
	_go_next _end_if_8
_end_if_8:
	_d0_m := 0
	_t32 := __arg__0 + __arg__1
	_t33 := _t32 / 2
	_d0_m := _t33
	_t34 := _call ifac2f __arg__0 _d0_m ;
	_t35 := _d0_m + 1
	_t36 := _call ifac2f _t35 __arg__1 ;
	_t37 := _t34 * _t36
	return _t37

